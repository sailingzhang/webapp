

master_process off;
daemon off;
worker_processes 1;
pid nginx.pid;
# error_log stderr debug;
# access_log off;
error_log error;

events {
  worker_connections 1024;
}

http {
  access_log off;
  include mime.types;
#   default_type  application/octet-stream;
#   client_max_body_size 0;
#   client_body_temp_path client_body_temp;
  proxy_temp_path proxy_temp;
  proxy_request_buffering off;
    server {
        listen 81;        # 监听本机所有 ip 上的 80 端口
        server_name _;      # 域名：www.example.com 这里 "_" 代表获取匹配所有
        #server_name temp.zhangruibin.com www.temp.zhangruibin.com;在域名解析处增加一个二级子域名解析，可以使用域名直接访问静态资源，效果如下图所示；
        # root /home/sailingzhang/winshare/develop/source/mygit/webapp/cactus;  # 站点根目录
        index index.html;
        location =/temp {       # 可有多个 location 用于配置路由地址
        try_files index.html =404;
        }


        location /test {
               if ($uri = /test/index.html) {
                add_header Cache-Control no-cache;
               }
               if ( $uri ~* /test/noCompressed/ ){
                       add_header Cache-Control no-cache;
               }
               #if ($uri ~ "lang*.js") {
               #add_header Cache-Control no-cache;
               #}
               expires 1d;
               alias /home/sailingzhang/winshare/develop/source/mygit/webapp/cactus/;
               index  index.html index.htm;
        }
        location /cactus {
              #  if ($uri = /cactus/index.html) {
              #   add_header Cache-Control no-cache;
              #  }
              #  if ( $uri ~* /cactus/noCompressed/ ){
              #          add_header Cache-Control no-cache;
              #  }
               #if ($uri ~ "lang*.js") {
               #add_header Cache-Control no-cache;
               #}
            #    add_header Cache-Control no-store;
               expires 1d;
               alias /var/www/cactus/;
               index  index.html index.htm;
        }
    }

    # server{
    #   # access_log on;
    #   listen 8080 ;
    #   # server_name _;
    #   # ssl_certificate /home/sailingzhang/develop/mygit_dev/tmp/server.crt;
    #   # ssl_certificate_key /home/sailingzhang/develop/mygit_dev/tmp/server.key;
    #   location / {
    #     grpc_pass grpc://127.0.0.1:8000;
    #     if ($request_method = 'OPTIONS') {
    #             add_header 'Access-Control-Allow-Origin' '*';
    #             add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
    #             add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Transfer-Encoding,Custom-Header-1,X-Accept-Content-Transfer-Encoding,X-Accept-Response-Streaming,X-User-Agent,X-Grpc-Web';
    #             add_header 'Access-Control-Max-Age' 1728000;
    #             add_header 'Content-Type' 'text/plain charset=UTF-8';
    #             add_header 'Content-Length' 0;
    #             return 204;
    #           }
    #     if ($request_method = 'POST') {
    #       add_header 'Access-Control-Allow-Origin' '*';
    #       add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
    #       add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Transfer-Encoding,Custom-Header-1,X-Accept-Content-Transfer-Encoding,X-Accept-Response-Streaming,X-User-Agent,X-Grpc-Web';
    #       add_header 'Access-Control-Expose-Headers' 'Content-Transfer-Encoding,Grpc-Message,Grpc-Status';
    #     }

    #   }
    # }



}